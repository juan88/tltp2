Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    VOICE
    LCURL
    RPAREN
    RCURL
    COLON
    ALTURA
    REPEAT
    NOTAID
    LPAREN
    NOTA
    SILENCIO

Grammar

Rule 0     S' -> exp
Rule 1     exp -> encabezado
Rule 2     encabezado -> tempo compas const
Rule 3     tempo -> HASH TEMPO FIGURE NUMBER
Rule 4     compas -> HASH COMPAS NUMBER DIV NUMBER
Rule 5     const -> CONST CONSTID EQUAL NUMBER SEMICOLON const
Rule 6     const -> <empty>

Terminals, with rules where they appear

ALTURA               : 
COLON                : 
COMPAS               : 4
CONST                : 5
CONSTID              : 5
DIV                  : 4
EQUAL                : 5
FIGURE               : 3
HASH                 : 3 4
LCURL                : 
LPAREN               : 
NOTA                 : 
NOTAID               : 
NUMBER               : 3 4 4 5
RCURL                : 
REPEAT               : 
RPAREN               : 
SEMICOLON            : 5
SILENCIO             : 
TEMPO                : 3
VOICE                : 
error                : 

Nonterminals, with rules where they appear

compas               : 2
const                : 2 5
encabezado           : 1
exp                  : 0
tempo                : 2

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . encabezado
    (2) encabezado -> . tempo compas const
    (3) tempo -> . HASH TEMPO FIGURE NUMBER

    HASH            shift and go to state 4

    encabezado                     shift and go to state 1
    tempo                          shift and go to state 2
    exp                            shift and go to state 3

state 1

    (1) exp -> encabezado .

    $end            reduce using rule 1 (exp -> encabezado .)


state 2

    (2) encabezado -> tempo . compas const
    (4) compas -> . HASH COMPAS NUMBER DIV NUMBER

    HASH            shift and go to state 5

    compas                         shift and go to state 6

state 3

    (0) S' -> exp .



state 4

    (3) tempo -> HASH . TEMPO FIGURE NUMBER

    TEMPO           shift and go to state 7


state 5

    (4) compas -> HASH . COMPAS NUMBER DIV NUMBER

    COMPAS          shift and go to state 8


state 6

    (2) encabezado -> tempo compas . const
    (5) const -> . CONST CONSTID EQUAL NUMBER SEMICOLON const
    (6) const -> .

    CONST           shift and go to state 10
    $end            reduce using rule 6 (const -> .)

    const                          shift and go to state 9

state 7

    (3) tempo -> HASH TEMPO . FIGURE NUMBER

    FIGURE          shift and go to state 11


state 8

    (4) compas -> HASH COMPAS . NUMBER DIV NUMBER

    NUMBER          shift and go to state 12


state 9

    (2) encabezado -> tempo compas const .

    $end            reduce using rule 2 (encabezado -> tempo compas const .)


state 10

    (5) const -> CONST . CONSTID EQUAL NUMBER SEMICOLON const

    CONSTID         shift and go to state 13


state 11

    (3) tempo -> HASH TEMPO FIGURE . NUMBER

    NUMBER          shift and go to state 14


state 12

    (4) compas -> HASH COMPAS NUMBER . DIV NUMBER

    DIV             shift and go to state 15


state 13

    (5) const -> CONST CONSTID . EQUAL NUMBER SEMICOLON const

    EQUAL           shift and go to state 16


state 14

    (3) tempo -> HASH TEMPO FIGURE NUMBER .

    HASH            reduce using rule 3 (tempo -> HASH TEMPO FIGURE NUMBER .)


state 15

    (4) compas -> HASH COMPAS NUMBER DIV . NUMBER

    NUMBER          shift and go to state 17


state 16

    (5) const -> CONST CONSTID EQUAL . NUMBER SEMICOLON const

    NUMBER          shift and go to state 18


state 17

    (4) compas -> HASH COMPAS NUMBER DIV NUMBER .

    CONST           reduce using rule 4 (compas -> HASH COMPAS NUMBER DIV NUMBER .)
    $end            reduce using rule 4 (compas -> HASH COMPAS NUMBER DIV NUMBER .)


state 18

    (5) const -> CONST CONSTID EQUAL NUMBER . SEMICOLON const

    SEMICOLON       shift and go to state 19


state 19

    (5) const -> CONST CONSTID EQUAL NUMBER SEMICOLON . const
    (5) const -> . CONST CONSTID EQUAL NUMBER SEMICOLON const
    (6) const -> .

    CONST           shift and go to state 10
    $end            reduce using rule 6 (const -> .)

    const                          shift and go to state 20

state 20

    (5) const -> CONST CONSTID EQUAL NUMBER SEMICOLON const .

    $end            reduce using rule 5 (const -> CONST CONSTID EQUAL NUMBER SEMICOLON const .)

